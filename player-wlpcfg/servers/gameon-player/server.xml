<server description="Game On! Player Service">

	<!-- Enable API discovery -->
    <include location="${server.config.dir}/apiDiscovery.xml"/>

    <!-- Enable features -->
  <featureManager>
    <feature>websocket-1.1</feature>
    <feature>localConnector-1.0</feature>
    <feature>jaxrs-2.0</feature>
    <feature>cdi-1.2</feature>
    <feature>ssl-1.0</feature>
    <feature>jsonp-1.0</feature>
    <feature>jndi-1.0</feature>
    <feature>concurrent-1.0</feature>
    <feature>couchdb-1.0</feature>
  </featureManager>

  <keyStore id="defaultKeyStore" password="testOnlyKeystore"/>
  <keyStore id="defaultTrustStore" location="truststore.jks" password="truststore"/>

  <sslDefault sslRef="DefaultSSLSettings"/>
  <ssl id="DefaultSSLSettings" keyStoreRef="defaultKeyStore" trustStoreRef="defaultTrustStore"/>

  <couchdb id="couchdb" jndiName="couchdb/connector" libraryRef="couchdb-lib" password="${env.COUCHDB_PASSWORD}" url="${env.COUCHDB_URL}" username="${env.COUCHDB_USER}"/>

  <library id="couchdb-lib" >
    <fileset dir='${server.config.dir}/lib' />
  </library>

  <!-- To access this server from a remote client add a host attribute to
    the following element, e.g. host="*" -->
  <httpEndpoint host="*" httpPort="9080" httpsPort="9443" id="defaultHttpEndpoint">
    <accessLogging
        filepath="${server.output.dir}/logs/http_defaultEndpoint_access.log"
        logFormat='%h %u %t "%r" %s %b %D %{User-agent}i'>
    </accessLogging>
  </httpEndpoint>

  <cors allowedMethods="GET, POST, PUT, DELETE" allowedOrigins="*" domain="/play" maxAge="86400"/>
  <cors allowedMethods="GET, POST, PUT, DELETE" allowedOrigins="*" domain="/players" maxAge="86400"/>

  <!-- Signed JWT keystore info -->
  <jndiEntry jndiName="jwtKeyStore" value="${server.config.dir}/resources/security/key.jks"/>
  <jndiEntry jndiName="jwtKeyStorePassword" value="testOnlyKeystore"/>
  <jndiEntry jndiName="jwtKeyStoreAlias" value="default"/>

  <jndiEntry jndiName="authCallbackURLSuccess" value="${env.SUCCESS_CALLBACK}"/>
  <jndiEntry jndiName="authCallbackURLFailure" value="${env.FAIL_CALLBACK}"/>
  <jndiEntry jndiName="playerUrl" value="${env.PLAYER_URL}"/>
  <jndiEntry jndiName="systemId" value="${env.SYSTEM_ID}"/>

  <!-- Twitter Application Info... -->
  <jndiEntry jndiName="twitterOAuthConsumerKey" value="${env.TWITTER_CONSUMER_KEY}"/>
  <jndiEntry jndiName="twitterOAuthConsumerSecret" value="${env.TWITTER_CONSUMER_SECRET}"/>

  <!-- Facebook Application Info...  -->
  <jndiEntry jndiName="facebookAppID" value="${env.FACEBOOK_APP_ID}"/>
  <jndiEntry jndiName="facebookSecret" value="${env.FACEBOOK_APP_SECRET}"/>

  <!-- Google Application Info...  -->
  <jndiEntry jndiName="googleOAuthConsumerKey" value="${env.GOOGLE_APP_ID}"/>
  <jndiEntry jndiName="googleOAuthConsumerSecret" value="${env.GOOGLE_APP_SECRET}"/>

  <!-- Github Application Info...  -->
  <jndiEntry jndiName="gitHubOAuthKey" value="${env.GITHUB_APP_ID}"/>
  <jndiEntry jndiName="gitHubOAuthSecret" value="${env.GITHUB_APP_SECRET}"/>

  <!-- turn off monitoring in containers (see localdev dropin) -->
  <applicationMonitor dropinsEnabled="false" updateTrigger="mbean"/>
  <config updateTrigger="mbean" />

  <logging traceSpecification="*=info:org.gameon.*=all:org.gameontext.*=all:net.wasdev.gameon.*=all"/>

  <!-- This is required to prevent the web apps from being lazily loaded -->
  <webContainer deferServletLoad="false"/>
  <!-- The JVM can get confused about available CPU in virtualized envs -->
  <executor coreThreads="5"  />

  <!-- new API as a separate war -->
  <webApplication contextRoot="/players" id="player-app" location="player-app.war" name="player-app">
    <classloader commonLibraryRef="couchdb-lib"></classloader>
  </webApplication>


  <!-- Preserve the old API as a separate war. Do not inspect it for swagger -->
  <webApplication contextRoot="/play" id="play-app" location="play-app.war" name="play-app">
    <classloader commonLibraryRef="couchdb-lib"></classloader>
  </webApplication>
  <apiDiscovery>
     <webModuleDoc contextRoot="/play" enabled="false" />
  </apiDiscovery>

</server>
